@page
@model WebApp.Pages.Products.DetailsModel

@{
    ViewData["Title"] = "Product Details";
}

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h2>Product Details</h2>
                    @if (!Model.Product.IsDeleted)
                    {
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editProductModal">
                                Edit Product
                            </button>
                            <form method="post" asp-page-handler="Delete">
                                <input type="hidden" name="id" value="@Model.Product.Id" />
                                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this product?');">
                                    Delete Product
                                </button>
                            </form>
                        </div>
                    }
                    else
                    {
                        <span class="badge bg-warning text-dark">Archived</span>
                    }
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (!string.IsNullOrEmpty(Model.Product.ImageUrl))
                        {
                            <div class="col-md-4 mb-3">
                                <img src="@Model.Product.ImageUrl" class="img-fluid rounded" alt="Product image">
                            </div>
                        }
                        <div class="col-md-8">
                            <dl class="row">
                                <dt class="col-sm-4">Name:</dt>
                                <dd class="col-sm-8">@Model.Product.Name</dd>

                                <dt class="col-sm-4">Price:</dt>
                                <dd class="col-sm-8">@Model.Product.Price.ToString("C2")</dd>

                                <dt class="col-sm-4">Category:</dt>
                                <dd class="col-sm-8">@Model.Product.ProductTypeName</dd>

                                <dt class="col-sm-4">Description:</dt>
                                <dd class="col-sm-8">@Model.Product.Description</dd>

                                <dt class="col-sm-4">Stock:</dt>
                                <dd class="col-sm-8">
                                    @Model.Product.Quantity
                                    <span class="badge @(Model.Product.IsInStock ? "bg-success" : "bg-danger")">
                                        @(Model.Product.IsInStock ? "Available" : "Out of Stock")
                                    </span>
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-page="./Index" class="btn btn-secondary">Back to Product List</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Product Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form method="post" asp-page-handler="UpdateProduct">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" asp-for="Product.Id" />
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="EditProduct.Name" class="form-label">Name</label>
                            <input asp-for="EditProduct.Name" class="form-control" />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="EditProduct.Price" class="form-label">Price</label>
                            <input asp-for="EditProduct.Price" class="form-control" type="number" step="0.01" />
                        </div>
                        <div class="col-md-12 mb-3">
                            <label asp-for="EditProduct.Description" class="form-label">Description</label>
                            <textarea asp-for="EditProduct.Description" class="form-control" rows="3"></textarea>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="EditProduct.ProductTypeId" class="form-label">Product Type</label>
                            <select asp-for="EditProduct.ProductTypeId" class="form-select">
                                @foreach (var type in Model.ProductTypes)
                                {
                                    <option value="@type.Id">@type.Name</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-12 mb-3">
                            <label class="form-label">Add/Remove Stock</label>
                            <div class="input-group">
                                <button class="btn btn-outline-secondary" type="button" onclick="adjustQuantity(-1)">-</button>
                                <input type="number"
                                       id="stockQuantity"
                                       name="StockChange"
                                       class="form-control text-center"
                                       value="0"
                                       min="-100"
                                       max="100" />
                                <button class="btn btn-outline-secondary" type="button" onclick="adjustQuantity(1)">+</button>
                            </div>
                            <small class="form-text text-muted">
                                Enter positive number to add stock, negative to remove.
                                Current stock: @Model.Product.Quantity
                            </small>
                            <input type="hidden"
                                   id="hiddenTotalQuantity"
                                   name="EditProduct.Quantity"
                                   value="@Model.Product.Quantity" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let initialStock = @Model.Product.Quantity;
        let currentStockChange = 0;

        function adjustQuantity(change) {
            const quantityInput = document.getElementById('stockQuantity');
            const totalQuantityInput = document.getElementById('hiddenTotalQuantity');
            
            let proposedChange = currentStockChange + change;
            
            if (proposedChange <= 0) {
                proposedChange = Math.max(proposedChange, -initialStock);
            }
            
            proposedChange = Math.max(Math.min(proposedChange, 100), -initialStock);
            
            
            currentStockChange = proposedChange;
            quantityInput.value = currentStockChange;
            totalQuantityInput.value = initialStock + currentStockChange;
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            var editModal = document.getElementById('editProductModal');
            editModal.addEventListener('show.bs.modal', function () {
                initialStock = @Model.Product.Quantity;
                currentStockChange = 0;
                document.getElementById('stockQuantity').value = 0;
                document.getElementById('hiddenTotalQuantity').value = initialStock;
            });
        });
    </script>
}